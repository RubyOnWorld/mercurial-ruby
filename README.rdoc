= mercurial-ruby

Ruby API for Mercurial DVCS. Implemented via a command line interface.

== Installation

 gem install mercurial-ruby
 
== Compatibility

Tested with Mercurial 1.9 and 1.9.1.

== Configuration

Right now there's only one setting that can be configured: 

 Mercurial.configure do |conf|
   conf.hg_binary_path = "/usr/bin/hg" 
 end
 
Default for hg_binary_path is /usr/local/bin/hg.
 
== Usage

All actions are performed through Mercurial::Repository object,
so first thing you should do is to initialize one. Either by creating a new repository:

 repository = Mercurial::Repository.create("/path/to/new_repository")

or opening an existing one:

 repository = Mercurial::Repository.open("/path/to/existing_repository")

== Updating Repository Configs

Now when you have your repository object you can do various cool things with it.
For example change settings in it's .hg/hgrc config file:

 repository.config.exists? # => false
 repository.config.contents # => nil
 
The config doesn't exist when you create a new repo. That shouldn't bother you though
if you want to add some settings to it:

 repository.config.add_setting('ui', 'settingname', 'value')
 
Now if you look at contents now:

 repository.config.contents
 
You will see your setting is in place:
 
 [ui]
 settingname = value
 
You can also delete it as easily:
 
 repository.config.delete_setting!('ui', 'settingname')
 repository.config.contents # => ""
 
You can read more about hgrc configuration here:

http://www.selenic.com/mercurial/hgrc.5.html
 
== Hooks

Mercurial store hooks in the hgrc file, so you can use the config factory describe above
to setup hooks in your repository. However there's also a nice little helper to do just that.
You can find existing hooks:

 repository.hooks.all
 repository.hooks.by_name('commit')
 
Or you can add your own:

 repository.hooks.add('changegroup', 'hg update')
 
And of course remove:

 repository.hooks.remove('changegroup')
 
You can read more about hooks here:

http://www.selenic.com/mercurial/hgrc.5.html#hooks 
 
== Commits

Of course one of the main reasons to use the API us to get info about commits.
There are several methods you can use to find commits in your repository. All of them
are straightforward enough and don't require explanation:

 repository.commits.all
 repository.commits.each {|c| ... }
 repository.commits.count
 repository.commits.by_branch('brancname')
 repository.commits.by_hash_id('291a498f04e9')
 repository.commits.by_hash_ids('291a498f04e9', '63f70b2314ed')
 repository.commits.for_range('bf6386c0a0cc', '63f70b2314ed')
 repository.commits.tip
 
Each method will return either a single Commit object or an array of those.
Here's how the object looks like:

 commit = repostiory.commits.tip # => #<Mercurial::Commit:0x10597f8a0>
 commit.repository # => #<Mercurial::Repository:0x109db65f0>
 commit.hash_id # => '291a498f04e9'
 commit.author # => 'Ilya Sabanin'
 commit.author_email # => 'ilya@example.com'
 commit.date # => Sat Aug 06 17:22:56 +0800 2011
 commit.message # => 'Fancy commit message here.'
 commit.changed_files # => [#<Mercurial::ChangedFile:0x105db65f0>, #<Mercurial::ChangedFile:0x102db65f0>]
 commit.branches_names # => ['default']
 commit.tags_names # => []
 commit.parents_ids # => ['63f70b2314ed']
 
There are also several fancy methods you can use on it:

 commit.merge? # true if has several parents
 commit.blank? # true if hash_id is all zeroes
 commit.diffs

== Tags

 repository.tags.all
 repository.tags.by_name('tagname')
 
== Branch

 repository.branches.all
 repository.branches.active
 repository.branches.closed
 repository.branches.by_name('branchname')

== Contributing to mercurial-ruby
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Ilya Sabanin. See LICENSE.txt for
further details.

